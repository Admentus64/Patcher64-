----------------
--- Consoles ---
----------------

Open the Consoles.json file in the /Files/Games directory.
Each game consists of attributes in the JSON format. The main object is "console".
Make sure to assign a console mode for every new game.

Attributes lines that are not present are equivalent to 0 or just empty.



--- Lines ---
title			Console title as shown in the Patcher64+ Tool GUI.

mode			Console mode which is used to link a game with, also used to read code with.

options_vc		If the Virtual Console supports options
			0		Disable Virtual Console options
			1		Allow Virtual Console options

rom_title		If the Console supports a ROM title in native mode so it can be changed
			0		ROM title is not supported in native mode
			1		ROM title is supported in native mode

rom_title_length	Decimal value for how long the game title may be in the ROM

rom_title_offset	Hexadecimal value for where the game title can be found in the ROM

rom_title_offset_2	Alternative hexadecimal value for where the game title can be found in the ROM

rom_title_uppercase	If the ROM title should be forced in uppercase
			0		Uppercase for the ROM title is not forced
			1		Uppercase for the ROM title is forced

rom_gameID		If the Console supports a ROM GameID in native mode so it can be changed
			0		ROM GameID and Region Code are not supported in native mode
			1		ROM GameID is supported in native mode
			2		ROM Region Code is supported in native mode

rom_gameID_offset	Hexadecimal value for where the GameID can be found in the ROM

appfile			The AppFile which should contain the ROM in the Virtual Console's WAD file
			"00000001.app"	Used for NES ROMs, this is the VC emulator itself
			"00000005.app"	Used for SNES/N64 ROMs, which is a container for the ROM and T64 files

t64			If console contains T64 textures
			0		Disable the "Remove All T64" checkbox
			1		Allow the "Remove All T64" checkbox



--- Example Console ---
"title" : "Nintendo 64",
"mode" : "N64",
"options_vc" : 1,
"rom_title" : 1,
"rom_title_length" : 20,
"rom_title_offset" : "20",
"rom_title_uppercase" : 1,
"rom_gameID" : 1,
"rom_gameID_offset" : "3B",
"appfile": "00000005.app",
"t64" : 1



-------------
--- Games ---
-------------

Open the Games.json file in the /Files/Games directory.
Each game consists of attributes in the JSON format. The main object is "game".
When adding a new entry, make sure to add a new folder in Files with the same name as the "mode" attribute.
Each game folder should contain an icon (Icon.ico), credits (Credits.txt), information (Info.txt) and a set of patches (Patches.json).
Patches can be added Patches.json file.

Attributes lines that are not present are equivalent to 0 or just empty.



--- Lines ---
title		Game title as shown in the Patcher64+ Tool GUI.

mode		Game mode as shown in the Active Mode label, also used to read code with.

support_vc	If the game supports the Virtual Console
		0			Game is not available in Wii VC mode
		1			Game is available in Wii VC mode

console		In which console mode the game is accessible, accepted values are defined the Consoles.json file

downgrade	If the ROM is capable of downgrading and can contain multiple entries.
		The following sub-attributes can be assigned to "downgrade"
		"file"			Downgrade patch file path, Supports Decompression and Extension
		"hash"			ROM Hash checksum to apply the downgrade patch on
		"rev"			Revision title to show

romc		Type of ROM in the VC WAD File
		0			Regular uncompressed ROM
		1			Super Smash Bros. / The Legend of Zelda: Majora's Mask compressed ROMC
		2			Paper Mario compressed ROMC

patches_vc	Amount of Patch VC options which are available
		0			No Patch VC Options are available
		1			Only base Patch VC Options are available
		2			More Patch VC Options are available (Super Mario 64)
		3			More Patch VC Options are available (Majora's Mask)
		4			All Patch VC Options are available (Ocarina of Time)

patches		If the Patch Options panel is shown
		0			Hide Patch Options panel
		1			Show Patch Options panel

decompress	If the ROM is capable of decompressing
		0			ROM can not decompress
		1			ROM can decompress (Zelda 64 only)
		2			ROM can decompress (Super Mario 64 only)

dmaTable	New dmatable to overwrite existing dmatable with

rom_title	Default game title for the ROM, no more than the amount of characters defined for the console

rom_gameID	Default GameID for the ROM, requires 4 characters (N64 only)

rom_region	Default Region Code for the ROM, requires value between 0 and 20 (SNES only)

vc_title	Default channel title for the Wii VC WAD, no more than 40 characters

vc_gameID	Default GameID for Wii VC WAD, requires 4 character

hash		Default MD5 hash checksum for ROM files



--- Example Game ---
"title" : "The Legend of Zelda: Ocarina of Time",
"mode" : "Ocarina of Time",
"support_vc" : 1,
"console" : "N64",
"downgrade" : [ {
	"file" : "\\Downgrade\\rev1_to_rev0.bps",
	"hash" : "721FDCC6F5F34BE55C43A807F2A16AF4",
	"rev" : "Rev 1"
}, {
	"file" : "\\Downgrade\\rev2_to_rev0.bps",
	"hash" : "57A9719AD547C516342E1A15D5C28C3D",
	"rev" : "Rev 2"
}, {
	"file" : "\\Downgrade\\gc_to_rev0.bps",
	"hash" : "CD09029EDCFB7C097AC01986A0F83D3F",
	"rev" : "GC"
} ],
"patches_vc" : 4,
"patches" : 1,
"decompress" : 1,
"dmaTable" : "0 1 2 3 4 5 6 7 8 9 15 16 17 18 19 20 21 22 23 24 25 26 942 944 946 948 950 952 954 956 958 960 962 964 966 968 970 972 974 976 978 980 982 984 986 988 990 992 994 996 998 1000 1002 1004 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 1521 1522 1523 1524 1525",
"rom_title" : "THE LEGEND OF ZELDA",
"rom_gameID" : "CZLE",
"vc_title" : "Zelda: Ocarina",
"vc_gameID" : "NACE",
"hash" : "5BD1FE107BF8106B2AB6650ABECD54D6"



---------------
--- Patches ---
---------------

Open the Patches.json file in one of the game folders in /Files/Games.
Each patch consists of attributes in the JSON format. The main object is "patch".

Currently each game folder has four sub-directories: Binaries (hardcoded), Compressed, Decompressed and Textures (hardcoded).
A few patches in Compressed and Decompressed are hardcoded.

Attributes lines that are not present are equivalent to 0 or just empty.



--- Lines ---
title		Patch title as shown in the Patcher64+ GUI.

console		In which console mode the patch is accessible, accepted values are: "Native", "Wii VC" or "Both"

command		Special command for patches. Commands can be mixed. Uppercase or lowercase does not matter.
		""			Empty, no command given
		"Force Downgrade"	Downgrade OoT Rev 1 or OoT Rev 2 ROM file to Rev 0
		"No Downgrade"		Prevent downgrading OoT to a Rev 0 ROM File
		"Force Remap D-Pad"	Remap the D-Pad for OoT or MM
		"Patch Boot DOL" 	For Super Mario 64, patch the Boot DOL File in the VC WAD
		"Multiplayer" 		For Super Mario 64, allows byte-patching the modified MP Boot DOL File in the VC WAD
		"No FPS"		Disable the 60 FPS patch for Super Mario 64 in "Additional Options"
		"No Free Cam"		Disable the Analog Camera patch for Super Mario 64 in "Additional Options"
		"Extract"		Extract .Z64 ROM from Wii VC .WAD only
		"Inject"		Inject .Z64 ROM into Wii VC .WAD File
		"Patch VC"		Patch Wii VC .WAD File with "Patch VC Options" only
		"Apply Patch"		Apply custom provided .bps, .ips, .xdelta or .vcdiff patch file
		

redux		If the patch supports Redux. Redux is only supported by OoT and MM
		The following sub-attributes can be assigned to "redux" as well. These attributes overwrite the regular attributes
		"rom_title"		ROM game title, no more than the amount of characters defined for the console
		"rom_gameID"		ROM GameID, requires 4 characters
		"vc_title"		Wii VC WAD channel title, no more than 40 characters
		"vc_gameID"		Wii VC WAD GameID, requires 4 characters
		"file"			Patch file path, supports Decompression and Extension
		"output"		Output file name extension

options		If the patch supports additional options.
		0			Disable "Options"
		1			Show "Options" and allow it if the checkbox is checked

languages	If the patch supports multiple languages and can contain multiple entries
		The following sub-attributes can be assigned to "languages" as well, these attributes overwrite the regular attributes
		"title"			Button with title for the language that displays
		"rom_title"		ROM game title, no more than the amount of characters defined for the console
		"rom_gameID"		ROM GameID, requires 4 characters.
		"vc_title"		Wii VC WAD channel title, no more than 40 characters
		"vc_gameID"		Wii VC WAD GameID, requires 4 characters
		"file"			Patch file path, supports Decompression and Extension
		"output"		Output file name extension
		"max_text_speed"	Allow the max text speed for a language, can be set to 1, 2 or 3

rom_title	ROM game title for the patch, No more than 20 characters.

rom_gameID	ROM GameID for the patch, requires 4 characters.

vc_title	Wii VC WAD Channel Title for the patch, no more than 40 characters.

vc_gameID	Wii VC WAD GameID for the patch, requires 4 characters.

file		Patch file. Start with \\. Patch is located in current same folder, but can be set into folders.
		Add \\Decompressed for decompressed patches. Provide patches in .bps, .ips, .xdelta or .vcdiff
	 	Flips is be used by default (.bps / .ips). Xdelta (.xdelta) or Xdelta3 (.vcdiff) will be automaticially recognized.

extend		Specify the new size for the extended ROM. Only works for SM64. Is required for decompressed patches.
		Size value must be between 18 and 64. Will only be used for decompressed patches.

output		Output file name extension.

hash		Hashsum check on N64 rom. Hashes are in MD5.
		"Dawn & Dusk" is a special hash command that allows all three N64 US OoT revisions.

tooltip		Patch button description.



--- Example Patch ---
"title" : "Ocarina of Time",
"console" : "Both",
"command" : "Force Downgrade",
"redux" : {
	"options" : 1,
	"vc_title" : "Redux: Ocarina",
	"vc_gameid" : "NAC0",
	"file" : "\\Decompressed\\redux.bps",
	"output" : "_redux_patched"
},
"options" : 1,
"languages" : [ {
	"title" : "English",
	"max_text_speed" : 3
}, {
	"title" : "Japanese",
	"rom_gameID" : "CZLJ",
	"vc_title" : "Zelda: Ocarina (JAP)",
	"vc_gameid" : "NACJ",
	"output" : "_japanese_patched",
	"max_text_speed" : 1
}, {
	"title" : "Chinese",
	"rom_gameID" : "CZLJ",
	"vc_title" : "Zelda: Ocarina (CHI)",
	"vc_gameid" : "NACC",
	"file" : "\\Decompressed\\chi.ppf",
	"output" : "_chinese_patched",
	"max_text_speed" : 1
}, {
	"title" : "Spanish",
	"vc_title" : "Zelda: Ocarina (SPA)",
	"vc_gameid" : "NACS",
	"file" : "\\Decompressed\\spa.ppf",
	"output" : "_spanish_patched",
	"max_text_speed" : 2
}, {
	"title" : "Polish",
	"vc_title" : "Zelda: Ocarina (POL)",
	"vc_gameid" : "NACO",
	"file" : "\\Decompressed\\pol.ppf",
	"output" : "_polish_patched",
	"max_text_speed" : 2
}, {
	"title" : "Russian",
	"vc_title" : "Zelda: Ocarina (RUS)",
	"vc_gameid" : "NACR",
	"file" : "\\Decompressed\\rus.ppf",
	"output" : "_russian_patched",
	"max_text_speed" : 2
} ],
"tooltip" : "The regular Ocarina of Time experience{0}With support for languages, redux and additional options{0}- Supported: Rev 0 (US)"



--------------------------------
--- PowerShell Script Module ---
--------------------------------

In order to create a new GUI for a game defined in the Games.json file a new PowerShell Script Module (.psm1) has to be created.
The new .psm1 file should be placed in \Files\Scripts\Options with any file name you like.

Each module automaticially recognizes the following functions:
- PatchOptions (for file-patching regular options)
- PatchRedux (for file-patching Redux related options)
- ByteOptions (for byte-patching regular options)
- ByteRedux (for byte-patching Redux related options)
- ByteLanguage (for byte-patching language related options)
- CreateOptions (initial function to call the GUI)

Each of these functions need their function name extended by the "mode" value of the game without any spaces or special symbols in it, so for example:
- PatchOptionsMajorasMask

The GUI can be divided into tabs by calling the CreateOptionsDialog with the -Tabs attribute.
Ex. -Tabs @("Audiovisual", "Difficulty", "Colors", "Equipment", "Cutscenes")
This adds the tabs as defined above.
The tab "Redux" is automaticially defined if there is a Redux patch.
The tab "Language" is automaticially defined if there are Language patches available. Call the funcrion CreateLanguageContent to add the available languages.
The tab "Main" is automaticially added when more than more tab is defined.

A tab can be initalized by calling the function in the following manner "CreateTab" + TabName + GameMode. An example is listed below.
- CreateTabAudiovisualOcarinaOfTime

File-patching functions should be used for options that are applied through a patch file such as BPS or IPS.
Byte-patching functions should be used for options that are applied directly by loading in the whole ROM in the RAM, alter individual changes and then resave the ROM.

Existing modules can be looked at as an example.

Other than using the reserved functions to get started, just about everything can be manually coded as you like.
Make sure to export all used functions, including the reserved functions.
Reserved functions are not required to be used.